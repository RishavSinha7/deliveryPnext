"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/layout",{

/***/ "(app-pages-browser)/./src/app/globals.css":
/*!*****************************!*\
  !*** ./src/app/globals.css ***!
  \*****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"75d6a6acdb65\");\nif (true) { module.hot.accept() }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9hcHAvZ2xvYmFscy5jc3MiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGlFQUFlLGNBQWM7QUFDN0IsSUFBSSxJQUFVLElBQUksaUJBQWlCIiwic291cmNlcyI6WyJEOlxcZGVsaXZlcnlQbmV4dFxcZnJvbnRlbmRcXHNyY1xcYXBwXFxnbG9iYWxzLmNzcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBcIjc1ZDZhNmFjZGI2NVwiXG5pZiAobW9kdWxlLmhvdCkgeyBtb2R1bGUuaG90LmFjY2VwdCgpIH1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/globals.css\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/lib/api.ts":
/*!************************!*\
  !*** ./src/lib/api.ts ***!
  \************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   authApi: () => (/* binding */ authApi),\n/* harmony export */   tokenManager: () => (/* binding */ tokenManager),\n/* harmony export */   userApi: () => (/* binding */ userApi)\n/* harmony export */ });\n// API configuration and utility functions\nconst API_BASE_URL = \"http://localhost:5000/api\" || 0;\n// Helper function to make API calls\nasync function apiCall(endpoint) {\n    let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n    const token = localStorage.getItem('authToken');\n    const config = {\n        mode: 'cors',\n        headers: {\n            'Content-Type': 'application/json',\n            ...token && {\n                Authorization: \"Bearer \".concat(token)\n            },\n            ...options.headers\n        },\n        ...options\n    };\n    console.log('API Call:', \"\".concat(API_BASE_URL).concat(endpoint), config);\n    try {\n        const response = await fetch(\"\".concat(API_BASE_URL).concat(endpoint), config);\n        console.log('Response status:', response.status);\n        console.log('Response headers:', response.headers);\n        console.log('Response content-type:', response.headers.get('content-type'));\n        // Check if response is JSON\n        const contentType = response.headers.get('content-type');\n        if (!contentType || !contentType.includes('application/json')) {\n            const textResponse = await response.text();\n            console.error('Non-JSON response received:', textResponse);\n            throw new Error('Server returned an invalid response. Please check if the backend is running.');\n        }\n        if (!response.ok) {\n            let errorMessage = 'An error occurred';\n            try {\n                const errorData = await response.json();\n                errorMessage = errorData.message || errorMessage;\n            } catch (e) {\n                errorMessage = \"HTTP \".concat(response.status, \": \").concat(response.statusText);\n            }\n            throw new Error(errorMessage);\n        }\n        const data = await response.json();\n        console.log('Response data:', data);\n        return data;\n    } catch (error) {\n        console.error('API call error:', error);\n        console.error('API_BASE_URL:', API_BASE_URL);\n        console.error('Full URL:', \"\".concat(API_BASE_URL).concat(endpoint));\n        throw error;\n    }\n}\n// Authentication API calls\nconst authApi = {\n    register: async (userData)=>{\n        return apiCall('/auth/register', {\n            method: 'POST',\n            body: JSON.stringify(userData)\n        });\n    },\n    login: async (credentials)=>{\n        return apiCall('/auth/login', {\n            method: 'POST',\n            body: JSON.stringify(credentials)\n        });\n    },\n    logout: async ()=>{\n        const response = await apiCall('/auth/logout', {\n            method: 'POST'\n        });\n        localStorage.removeItem('authToken');\n        return response;\n    }\n};\n// User API calls\nconst userApi = {\n    getProfile: async ()=>{\n        return apiCall('/users/profile');\n    },\n    updateProfile: async (userData)=>{\n        return apiCall('/users/profile', {\n            method: 'PUT',\n            body: JSON.stringify(userData)\n        });\n    },\n    createCustomerProfile: async (profileData)=>{\n        return apiCall('/users/customer-profile', {\n            method: 'POST',\n            body: JSON.stringify(profileData)\n        });\n    },\n    getCustomerProfile: async ()=>{\n        return apiCall('/users/customer-profile');\n    }\n};\n// Token management with custom event dispatching\nconst tokenManager = {\n    setToken: (token)=>{\n        localStorage.setItem('authToken', token);\n        // Dispatch custom event for same-tab updates\n        window.dispatchEvent(new CustomEvent('authStateChange', {\n            detail: {\n                authenticated: true,\n                token\n            }\n        }));\n    },\n    getToken: ()=>{\n        return localStorage.getItem('authToken');\n    },\n    removeToken: ()=>{\n        localStorage.removeItem('authToken');\n        // Dispatch custom event for same-tab updates\n        window.dispatchEvent(new CustomEvent('authStateChange', {\n            detail: {\n                authenticated: false,\n                token: null\n            }\n        }));\n    },\n    isAuthenticated: ()=>{\n        return !!localStorage.getItem('authToken');\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/api.ts\n"));

/***/ })

});